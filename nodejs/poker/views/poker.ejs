<% layout('layout') -%>
<% script() -%>
<% stylesheet() -%>
<div class="row">
    <div class="col-lg-9">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-long-arrow-right fa-fw"></i> take seat </h3>
            </div>
            <div class="panel-body">
                <div id="table">
                    <% for (var i=1;i<9;i++){ %>
                        <div class="place" data-id="<%= i %>" id="place<%= i %>">
                            <canvas id="canvas_timer_<%= i %>" width="98" height="98"></canvas>
                            <div class="content_time" id="content_time_<%= i %>">
                                <p><span class="mins"></span> : <span class="secs"></span></p>
                            </div>
                            <div class="infoUser" style="display:none;"> 
                                <p class="playerName" ></p>
                                <img class="user" src="/img/user.png" />
                            </div>
                        </div>
                    <% } %>
                    <div id="popover_content_wrapper" style="display: none">
                        <div>
                            <p>A vous de miser</p> 
                            <p>Vous avez <span id="moneyUser"><%= user.money %></span></p>
                            <div class="btn-group">
                                <button type="button" onclick="miser(this)" class="btn btn-default">5</button>
                                <button type="button" onclick="miser(this)" class="btn btn-default">10</button>
                                <button type="button" onclick="miser(this)" class="btn btn-default">20</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-8 tablecard">  
                        <div class="col-lg-2 card card1_23" data-card="1_23"></div>  
                    </div>
                    <div id="pot">Total pot : <span></span></div>
                </div>
                <div class="text-right">
                    <a href="#">Externalize table <i class="fa fa-arrow-circle-right"></i></a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3">
        <div id="pokerAlertBox" style="display:none;" class="">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <div class="content"></div>
        </div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <i class="fa fa-user"></i>
                <%= user.username %>
            </div>
            <!-- /.panel-heading -->
            <div class="panel-body">
                <p>votre argent : <span id="ownMoney"></span></p>
                <p>votre mise :</p>
                <p>vos cartes :</p>
            </div>
        </div>
    <!-- /.panel-footer -->
</div>
    <% include chat %>
</div>
<!-- /.row -->
<script src="/js/timer.js"></script>
<script>
    function miser(that){
        var mise = parseInt($(that).html());
        var moneyUser = parseInt($('#moneyUser').html());
        $('#moneyUser').html(moneyUser - mise)
        socket.emit('poker_user_mise', mise, '<%=req.params.num %>', '<%= user.username %>');     
    }
    $(document).ready(function(){
        //selection place
        $('#table .place').click(function () {
            if($('#table').attr('class') == 'placed'){
                return null;
            }
            $('#table').addClass('placed');
            $(this).find('.infoUser').show();
            $(this).find('.infoUser').html('<p class="playerName"><%= user.username %></p><img class="user" src="/img/user.png" />');

            var n = 1; // nbre de caractères
            var length = $(this).attr('id').length;
            var result = $(this).attr('id').substring(length -n, length);
            $(this).attr('data-pseudo', '<%= user.username %>');
            $(this).popover({ 
                html : true,
                placement: 'bottom',
                content: function() {
                  return $('#popover_content_wrapper').html();
                }
            });
            socket.emit('new_poker_user', '<%= user.username %>', '<%=req.params.num %>', result);
            socket.emit('init_poker', '<%=req.params.num %>');
        });
    });
      
    var playerTable = [];
    var j;
    if (!parseInt($('#pot span').text())) {
        var totalPot = "<%= poker.money %>";
    } else {
        var totalPot = parseInt($('#pot span').text()) + <%= user.moneyUsed %>;
    }
    $('#pot span').text(totalPot);
    
    var id = '';
    var j = 0;
    var first = true;

    $(window).bind('beforeunload', function(event) {
        event.stopPropagation();
        socket.emit('del_poker_user', '<%= user.username %>', '<%= req.params.num %>');      
        return "Attention !\nVous Aller vous deconnecter du salon.\nSi vous appuyer sur OK, votre partie prendra fin.\n\nLa fenêtre est sur le point de se fermer";
    });
    
    //initianlize poker   
    socket.emit('init_poker', '<%=req.params.num %>');      
    socket.on('initialised', function (params) {
        if(params.poker){
            if(params.poker.user){
                var active = 0;
                for(var i=0; i<params.poker.user.length; i++){
                    if (params.poker.user[i].place){
                        if(params.poker.user[i].username == '<%= user.username %>'){
                            active = 1;
                            $('#place' + params.poker.user[i].place+'').attr('data-pseudo', '<%= user.username %>');
                            $('#table').addClass('placed');
                        }
                        $('#place' + params.poker.user[i].place + ' .infoUser').show();
                        $('#place' + params.poker.user[i].place + ' .infoUser .playerName').html(params.poker.user[i].username + ' ' + params.poker.user[i].money);
                        $('#ownMoney').html(params.poker.user[i].money); 
                    }
                    if(params.poker.user[i].moneyUsed){
                        if (!parseInt($('#pot span').text())) {
                            var totalPot = params.poker.user[i].moneyUsed;
                        } else {
                            var totalPot = parseInt($('#pot span').text()) + params.poker.user[i].moneyUsed;
                        }
                        $('#pot span').text(totalPot);
                    } 
                } 
            }
        }  
    });
    
    //submit mise + get next player
    socket.on('next_poker_user', function (params) {
        if(params){
            setTimeout(function(){
                $("#place"+params.poker.place).popover('hide');
            },10000);
            if(params.user){
                console.log(params.user.money);
                $('#place' + params.user.place + ' .infoUser .playerName').html(params.user.username + ' ' + params.user.money);
                $('#moneyUser').html(params.user.money);
            }
            if(params.poker.place != 0 && params.poker.user && params.poker.user.length > 1){
                $("div.place").attr('class', 'place');
                $("#place"+params.poker.place).addClass('activePlayer');
                if($("#place"+params.poker.place).attr('data-pseudo')){
                    console.log('your_turn');
                    $("#place"+params.poker.place).popover('toggle');
                }
                clearInterval(cdown);
                JBCountDown({
                    id: params.poker.place,
                    selector: 'canvas_timer_',
                    secondsColor: "#f9f9f9",
                    secondsGlow: "#666666",
                    timeLimit: 10,
                    next: function(){

                    }
                });    
            }
            $('#pot span').text(params.poker.money);
            /*data = JSON.parse(data);
            if (currentPlace === {{ player.place }}) {
                $('#player_total_money').text(data.money);
            }
            if (!parseInt($('#pot span').text())) {
                var totalPot = data.mise;
            } else {
                var totalPot = parseInt($('#pot span').text()) + data.mise;
            }
            $('#pot span').text(totalPot);*/
        }
    })
    
    // Quand un nouveau client se connecte, on affiche l'information
    socket.on('poker_alert', function (params) {
        if(params){
            $('#pokerAlertBox').attr('class', params.class);
            $('#pokerAlertBox .content').html(params.message);
            $('#pokerAlertBox').slideDown();
        }
    })
    socket.on('new_poker_user', function (params) {
        if(params){
            $('#place' + params.place + ' .infoUser').show();
            $('#place' + params.place + ' .infoUser .playerName').html(params.username + ' ' + params.money);
            $('.table').append('<p><em>' + params.username + ' a rejoint la table !</em></p>'); 
        }
    })
    socket.on('del_poker_user', function (params) {
        if(params){
            console.log(params);
            $('#place' + params.place + ' .infoUser').hide();  
            $('#place' + params.place + ' .infoUser .playerName').html('');  
            $('.table').append('<p><em>' + params.username + ' a quiter la table !</em></p>');
        }
    })
   
    //set flop
    // Quand un nouveau client se connecte, on affiche l'information
    socket.on('set_flop', function (params) {
        if(params){
            /*data = JSON.parse(data);
                //console.log(data);
                var cardsTable = data.table;
                var comb = data.comb.cards;
                $('#combName').text(data.comb.name);
                $('.tablecard').html('');
                for (var count = 0; count < cardsTable.length; count++) {
                    $('.tablecard').append('<div class="col-lg-2 card card' + cardsTable[count] + '" data-card="' + cardsTable[count] + '"></div>');
                    var x = cardsTable[count].split('-')[0];
                    var y = cardsTable[count].split('-')[1];
                    var j = y * 89.6;
                    var i = x * 61.4;
                    $(".card" + x + "-" + y).css({backgroundPosition: "-" + i + "px -" + j + "px"});
                }

                $('.comb').html('');
                for (var count2 = 0; count2 < comb.length; count2++) {
                    $('.comb').append('<div class="col-lg-2 card card' + comb[count2] + '" data-card="' + comb[count2] + '"></div>');
                    var x = comb[count2].split('-')[0];
                    var y = comb[count2].split('-')[1];
                    var j = y * 89.6;
                    var i = x * 61.4;
                    $(".card" + x + "-" + y).css({backgroundPosition: "-" + i + "px -" + j + "px"});
                }  */
        }
    });
    $('.card').each(function() {
        var coor = $(this).attr('data-card');
        var x = coor.split('-')[0];
        var y = coor.split('-')[1];
        var j = y * 89.6;
        var i = x * 61.4;
        // console.log(i + " " + j);
        $(".card" + x + "-" + y).css({backgroundPosition: "-" + i + "px -" + j + "px"});
    });
</script>