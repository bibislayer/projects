<style type="text/css">
    canvas {
        -webkit-transform: scale(0.99);  
        -moz-transform: scale(0.99);  
        border: 1px #d8d8d solid; 
        background-image: url('{{ asset('bundles/vmgeneral/images/circle.png') }}');
        background-position: center;
        margin: auto;
        display: block;
    }
    #recorder{
        display: block;
        margin: 0 auto;
    }

    .time {
        margin: auto;
        float: left;
        font-weight: bold;
    }
    #setupPanel {
        width:400px;
        height:30px;
        margin:5px;
    }
    embed{
        float: left;
        margin-right: 1%;
        margin-bottom: 20px;
    }
    #typeTimer,#typeTimer2{
        text-align: center;
        width:auto;
    }
    #recordStopButton  {
        margin-left: 10px !important;
    }
    #recordStartButton {
        float: left;
    }
</style>
<script src="{{ asset('bundles/vmgeneral/js/AC_OETags.js') }}" type="text/javascript"></script>
<script src="{{ asset('bundles/vmgeneral/js/excanvas.js') }}" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function(){
       $('#next_link').css('display', 'none'); 
    });
    // -----------------------------------------------------------------------------
    // Globals
    // Major version of Flash required
    var requiredMajorVersion = 9;
    // Minor version of Flash required
    var requiredMinorVersion = 0;
    // Minor version of Flash required
    var requiredRevision = 124;
    // -----------------------------------------------------------------------------

    // Version check for the Flash Player that has the ability to start Player Product Install (6.0r65)
    var hasProductInstall = DetectFlashVer(6, 0, 65);

    // Version check based upon the values defined in globals
    var hasRequestedVersion = DetectFlashVer(requiredMajorVersion, requiredMinorVersion, requiredRevision);

    function showRecord() {
        $("#recordStartButton").attr("disabled", false);
    }
    function loadRecording() {
        $('#recordStartButton').remove();
        $('#scriptcamInfo').hide();
        $.ajax({
            url: '{{ path('fo_question_get_name', {'slug_quest': app.request.get('slug_quest'), 'id': element.id}) }}',
            type: 'post',
            async: false,
            success: function(data) {
                $('#questionName').html('Question : <span class="appear_question no_bold">'+data+'</span>');
            }
        })
        $('.content_timer').show();
        $('#contentReadingTime').show();
        $('#content_read_timer').show();
        $('#message').show();
        $('.img_webcam').hide();
       // $('.question_cam').remove();
        renderProgress('read');
        setTimeout(function() {
            skipAttempt();
        }, {{ element.Question.questionTime * 1000 }} + 2000);
    }

    function skipAttempt() {
        $('.question_cam.content_timer h2').html('{% trans from 'front' %}questionnaire.question.webcam.step5{% endtrans %}');
        $('#text_enregistrement').html('<p  class="quatorzepx color_green">{% trans from 'front' %}questionnaire.question.webcam.recordingStart{% endtrans %}</p>');
        startRecording();
    }
    // function to manipualte red5 recorder
    function close() {
        $('#webcam').remove();
        $('#volumePanel').hide();
        $('#setupPanel').hide();
        $('.content_timer').hide();
        $('#loader').remove();
        $('#recordStopButton').remove();
        $('#text').html('<input type="hidden" name="webcam[{{element.Question.id}}]" value="{{questionnare_user is defined ? questionnare_user.id : ''}}_{{element.Question.id}}"/><p>{% trans from 'front' %}questionnaire.question.webcam.recordingSuccess{% endtrans %}</p>');
        setTimeout(function() {
            $('#next_link').trigger("click");
        }, 2000);
    }
    function startRecording() {
        $('#message').hide();
        $('#content_read_timer').hide();
        $('#content_response_timer').show();
        renderProgress('response');
        var temp = {{ element.Question.responseTime * 1000 }} + 2000;
        document.getElementById("red5recorder").startRecording();
        setTimeout(function() {
            $('#text').html('<p>Votre vidéo est en cours de traitement.</p>');
            $('.content_timer').html('<img id="loader" src="{{ asset('bundles/vmgeneral/images/loader.gif') }}" width="125px" title="loader" alt="loader" />');
        }, temp);
        setTimeout(function() {
            close()
        }, temp + 3000);
        // start the recording of the video
    }
    function stopRecording() {
        document.getElementById("red5recorder").stopRecording();
        $('#text').html('<p>Votre vidéo est en cours de traitement.</p>');
        $('.time').html('<img id="loader" src="{{ asset('bundles/vmgeneral/images/loader.gif') }}"  title="loader" alt="loader" />');
        setTimeout(function() {
            close()
        }, 3000);
        // stop the recording of the video
    }
    function validConf() {
        $('#verifConf').remove();
        $('#scriptcamInfo').html('<div class="grid_7"><div class="question_cam left"><h2>{% trans from 'front' %}questionnaire.question.webcam.step3{% endtrans %}</h2><div class="tuto_navigateur"><p>{% trans with {'%questionTime%': element.Question.questionTime, '%responseTime%': element.Question.responseTime} from 'front' %}questionnaire.question.webcam.displayInfoTime{% endtrans %}</p> <div class="stop"></div> <p class="play"></p> <div class="stop"></div>  </div></div></div>');
        $('.img_webcam').remove();
        $('.play').html('<a id="recordStartButton" class=" btn_principal" onclick="loadRecording()">{% trans from 'front' %}questionnaire.question.webcam.begin{% endtrans %}</a>');

    }
    function validCam() {
        $('#verifCam').hide();
        $('#verifConf').show();
    }
    function errorCam() {
        $('.question_cam').remove();
        $('.submit_row p').html('<input id="next_link" type="submit" class="btn primary" value="Suivant"  style="float: right; margin-right: 20px;margin-bottom:15px;"/>');
    }

    function renderProgress(elem) {
        var canvas = new Array();
        var ctx = new Array();
        var countdown = new Array();
        canvas[elem] = document.getElementById(elem + '_timer'),
                ctx[elem] = canvas[elem].getContext('2d'),
                sec = $(canvas[elem]).data('seconds') | 0,
                countdown[elem] = sec;

        ctx[elem].lineWidth = 10;
        ctx[elem].strokeStyle = "#f9f9f9";
        ctx[elem].fillStyle = '#666666';
        ctx[elem].textAlign = 'center';
        ctx[elem].font = '20px Arial';
        var
                startAngle = (-Math.PI / 2),
                time = 0,
                intv = setInterval(function() {

                    var endAngle = (Math.PI * time * 2 / sec) - Math.PI / 2;
                    ctx[elem].arc(50, 50, 42, startAngle, endAngle, false);
                    startAngle = endAngle;
                    ctx[elem].stroke();

                    ctx[elem].clearRect(20, 30, 55, 45);
                    ctx[elem].fillText(countdown[elem]-- + ' s', 50, 58);

                    if (++time > sec) {
                        clearInterval(intv);
                    }

                }, 1000);
    }
</script>

<div id="recorder">
    <div id="text"></div>
    {% if action == 'edition' %}
    <div id="webcam" class="grid_4">
        <img class="_100_imp" style="margin: 0 !important;" src="{{ asset('bundles/vmgeneral/images/cam.png') }}" >
    </div>
    {% else %}

    <div id="webcam" class="grid_4" style="min-width: 320px; ">
        <script type="text/javascript">
            if (hasProductInstall && !hasRequestedVersion) {
                // DO NOT MODIFY THE FOLLOWING FOUR LINES
                // Location visited after installation is complete if installation is required
                var MMPlayerType = (isIE == true) ? "ActiveX" : "PlugIn";
                var MMredirectURL = window.location;
                document.title = document.title.slice(0, 47) + " - Flash Player Installation";
                var MMdoctitle = document.title;

                AC_FL_RunContent(
                        "src", "playerProductInstall",
                        "FlashVars", "MMredirectURL=" + MMredirectURL + '&MMplayerType=' + MMPlayerType + '&MMdoctitle=' + MMdoctitle + "",
                        "width", "100%",
                        "height", "100%",
                        "align", "middle",
                        "id", "red5recorder",
                        "quality", "high",
                        "bgcolor", "#869ca7",
                        "name", "red5recorder",
                        "allowScriptAccess", "sameDomain",
                        "type", "application/x-shockwave-flash",
                        "pluginspage", "http://www.adobe.com/go/getflashplayer"
                        );
            } else if (hasRequestedVersion) {
                // if we've detected an acceptable version
                // embed the Flash Content SWF when all tests are passed

                AC_FL_RunContent(
                        "src", "{{ asset('bundles/vmgeneral/js/red5recorder') }}",
                        "width", "320px",
                        "height", "240px",
                        "align", "middle",
                        "id", "red5recorder",
                        "FlashVars", "fileName={{questionnare_user is defined ? questionnare_user.id : ''}}_{{element.Question.id}}&maxLength={{ element.Question.responseTime }}&timeLeft={{ element.Question.responseTime }}&showVolume=false",
                        "quality", "high",
                        "bgcolor", "#869ca7",
                        "name", "red5recorder",
                        "allowScriptAccess", "sameDomain",
                        "type", "application/x-shockwave-flash",
                        "pluginspage", "http://www.adobe.com/go/getflashplayer",
                        "show_area", "webcam"
                        );

            } else {  // flash is too old or we can't detect the plugin
                var alternateContent = 'Alternate HTML content should be placed here. '
                        + 'This content requires the Adobe Flash Player. '
                        + '<a href=http://www.adobe.com/go/getflash/>Get Flash</a>';
                document.write(alternateContent);  // insert non-flash content
            }// start the recording of the video


        </script>
    </div>
    {% endif %}
</div>
<div class="grid_7">
    <input type="hidden" name="webcam[{{element.Question.id}}]" value="{{questionnare_user is defined ? questionnare_user.id : ''}}_{{element.Question.id}}"/>
    <div id="verifCam" class="question_cam left">
        <h2>{% trans from 'front' %}questionnaire.question.webcam.step1{% endtrans %}</h2>

        <div class="tuto_navigateur">
            <p class="bold">{% trans from 'front' %}questionnaire.question.webcam.hasWebcam{% endtrans %}</p>
            <p  class="btn_webcam"><a href="javascript:void(0)" onClick="validCam()" class="btn_principal left">{% trans from 'front' %}yes{% endtrans %}</a><a onclick="$('#next_link').trigger('click');" type="submit" class="btn_principal left" >{% trans from 'front' %}no{% endtrans %}</a></p>
            <div class="stop"></div>
        </div>
    </div>
    <div id="verifConf" class="question_cam left" style="display:none">
        <h2>{% trans from 'front' %}questionnaire.question.webcam.step2{% endtrans %}</h2>
        <div class="tuto_navigateur">
        {% set browser = app.request.attributes.get('_browser').Browser %}
            <div class="tuto_etape">
                <p><span class="color_orange">1 - </span>{% trans from 'front' %}questionnaire.question.webcam.confStep1{% endtrans %}</p>
                <div><img class="etape" src="{{ asset('bundles/vmgeneral/images/tuto/etape2.png') }}" alt="etape2" /> </div>
            </div>
            <div class="tuto_etape">
                <p><span class="color_orange">2 - </span>{% trans from 'front' %}questionnaire.question.webcam.confStep2{% endtrans %}</p>
                <div><img class="etape" src="{{ asset('bundles/vmgeneral/images/tuto/etape3.png') }}" alt="etape3" /> </div>
            </div>

        {% if browser == 'Chrome' %}
            <div class="tuto_etape" id="chrome">
                <p><span class="color_orange">3 - </span>{% trans from 'front' %}questionnaire.question.webcam.confStep3{% endtrans %}</p>
                <div><img src="{{ asset('bundles/vmgeneral/images/tuto/chrome_tuto.gif') }}" alt="tuto_chrome" /> </div>
            </div>
            <div class="tuto_etape" id="opera">
                <p><span class="color_orange">3 - </span>{% trans from 'front' %}questionnaire.question.webcam.confStep3{% endtrans %}</p>
                <div><img class="opera" src="{{ asset('bundles/vmgeneral/images/tuto/opera_tuto.gif') }}" alt="tuto_opera" /></div>
            </div>
                {% elseif browser == 'Default Browser' %}
            <div class="tuto_etape">
                <p><span class="color_orange">3 - </span>{% trans from 'front' %}questionnaire.question.webcam.confStep3{% endtrans %}</p>
                <div><img class="firefox" src="{{ asset('bundles/vmgeneral/images/tuto/firefox_tuto.gif') }}" alt="tuto_firefox" /></div>
            </div>
        {% endif %}
            <div class="question_tuto">
                <p class="bold">{% trans from 'front' %}questionnaire.question.webcam.configurationQuestion{% endtrans %}</p>
                <p  class="btn_webcam"><a href="javascript:void(0)" onClick="validConf()" class="btn_principal left">{% trans from 'front' %}yes{% endtrans %}</a><a onclick="$('#next_link').trigger('click');" type="submit" class="btn_principal left" >{% trans from 'front' %}no{% endtrans %}</a></p>
                <div class="stop"></div>
            </div>
        </div>

    </div>

</div>


        <div id="scriptcamInfo"> </div>



        {% set link='' %}

<div class="grid_7">
    <div class="question_cam content_timer" style="display:none;">
        <h2>{% trans from 'front' %}questionnaire.question.webcam.step4{% endtrans %}</h2>
        <div class="tuto_navigateur">
            <p id="questionName" class="text_question bold _80"></p>
            <div id="text_enregistrement" class="text_center bold"></div>
            <div id="content_read_timer" style="display:none;" style="float:left;">
                <p id="typeTimer">{% trans from 'front' %}questionnaire.question.webcam.questionTime{% endtrans %}</p>
                <div class="green clock_webcam">
                    <canvas id="read_timer" width="100" height="100" data-seconds="{{ element.Question.questionTime }}"></canvas>
                </div>
                <a class="btn_principal no_bold" onclick="skipAttempt()" style="margin: auto !important;margin-top: 10px !important;">{% trans from 'front' %}questionnaire.question.webcam.skipReading{% endtrans %}</a>
            </div>

            <div class="time grid_12" id="content_response_timer" style="display:none;" style="float:left;">
                <p id="typeTimer2">{% trans from 'front' %}questionnaire.question.webcam.responseTime{% endtrans %}</p>
                <div class="green clock_webcam">
                    <canvas id="response_timer" width="100" height="100" data-seconds="{{ element.Question.responseTime }}"></canvas>
                </div>
                <a class="btn_principal no_bold" id="recordStopButton" onclick="stopRecording()" style="margin: auto !important;margin-top: 10px !important;">{% trans from 'front' %}questionnaire.question.webcam.stopRecording{% endtrans %}</a>
            </div>
            <div class="stop"></div>
        </div>
    </div>
</div>
<div class="stop"></div>
<script>
    {% if app.request.attributes.get('_browser').Browser == 'Chrome' %}
    if (window.navigator.vendor != "Google Inc.") {
        $('#chrome').hide();
    } else {
        $('#opera').hide();
    }
    {% endif %}
</script>
<noscript>

<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
        id="red5recorder" width="320px" height="240px"
        codebase="http://fpdownload.macromedia.com/get/flashplayer/current/swflash.cab">
    <param name="movie" value="red5recorder.swf" />
    <param name="quality" value="high" />
    <param name="bgcolor" value="#869ca7" />
    <param name="allowScriptAccess" value="sameDomain" />
    <embed src="red5recorder.swf" quality="high" bgcolor="#869ca7"
           width="100%" height="100%" name="red5recorder" align="middle"
           play="true"
           loop="false"
           quality="high"
           allowScriptAccess="sameDomain"
           type="application/x-shockwave-flash"
           pluginspage="http://www.adobe.com/go/getflashplayer" />

</object>
</noscript>
<div id="mediaplayer" style="display:none;"></div>
<p>{{ (errors is defined and errors[element.question.id] is defined) ? errors[element.question.id] : '' }}</p>

