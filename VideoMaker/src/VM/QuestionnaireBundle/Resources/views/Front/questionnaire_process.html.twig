{% extends 'VMGeneralBundle:Questionnaire:layout.html.twig' %}
{% block stylesheets %}
{{ parent() }}
{% endblock %}

{% block content %}
<div class="grid_12">
    <div class="block-main">
        <div class="block-simple">
            <div class="block_design">
                <div class="block_header"><h1>{{questionnaire.name}}</h1></div>
                <div class="grid_12" style="margin-bottom:10px; ">
                    <p class="title_bar">{% trans with {'%number%': ((pos / ( questionnaire.getQuestionnaireElement()|length >0 ?questionnaire.getQuestionnaireElement()|length : 1 ) * 100)) | number_format(0)} from 'front' %}questionnaire.element.progress{% endtrans %}</p>
                    <div id="progressbar"></div>
                </div>
                <div class="block_content question">
                    {% if elements is defined and elements| length > 0 %}

                    <ul class="list-design ul_design" id="list_ul_0" data-parent="0">
                        <form class="no_form" enctype="multipart/form-data" method="post" name="proces_form" id="process_form" action="{{ path(app.request.get('_route'), {'slug_quest': app.request.get('slug_quest')}) }}">
                            {% for element in elements %}
                                {% include 'VMQuestionnaireBundle:Middle:Element/' ~element.StdQuestionnaireTypeElement.slug~ '.html.twig' %} 
                            {% endfor %} 
                        </form>              
                    </ul> 

                    {% else %}
                    <p> No Element exists </p>
                    {% endif %}

                    <p><a class="btn_principal right" href="javascript:void(0);" id="next_link">{% trans from 'front' %}questionnaire.actionButton.nextQuestion{% endtrans %}</a> </p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="stop"></div>
<script type="text/javascript">
    window.onbeforeunload = function(event) {
        if (isBlocked) {
            if ($("#red5recorder").attr('flashvars') || $("#read_timer").attr('data-seconds')) {
                return 'Si vous quittez ou rechargez cette page, la question sera considérée comme répondu.';
            }
        }
    }
    $(document).ready(function() {
        {% if first_time == false %}
        if ($("#red5recorder").attr('flashvars') || $("#read_timer").attr('data-seconds')) {
            isBlocked = false;
            event.preventDefault();
            $("#process_form").append('<input type="hidden" name="timeout" value="timeout" />');
            $('#process_form').submit();
        }
        {% endif %}
        $("#progressbar").progressbar({
            value: {{ ((pos /( questionnaire.getQuestionnaireElement()|length >0 ?questionnaire.getQuestionnaireElement()|length : 1  ) * 100)) | number_format(0) }}
        });
        history.pushState({"position": 'pos'}, 'doc', document.location.href);
        $('#next_link').click(function(event) {
            isBlocked = false;
            event.preventDefault();
            $('#process_form').submit();
        });
        //code is used for click event of backbutton
        window.onpopstate = function(event) {
            var state = event.state;
            //This is used for reloading only once for chrome firstime because chrome fires popstate on load also 
            if (load_first == true && !state) {
                load_first = false;
                if (navigator.userAgent.indexOf('Gecko/') != '-1') {
                    window.location = document.location.href;
                }
            } else {
                //load content again for back button click event
                load_first = false;
                window.location = document.location.href;
            }
        }

    });


</script>
{% endblock %}
