VM\VideoBundle\Entity\Video:
    type: entity
    table: videos
    repositoryClass: VM\VideoBundle\Repository\VideoRepository
    gedmo:
      tree:
        type: nested
    fields:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
        name: { type: string, length: 255 }
        text_description: { type: text, nullable: TRUE }
        position: { type: integer }
        time_limit: { type: integer, nullable: TRUE }
        tag: { type: array, nullable: TRUE }
        enclosed_files : { type: text, nullable: TRUE }
        lft:
          type: integer
          gedmo:
            - treeLeft
        rgt:
          type: integer
          gedmo:
            - treeRight
        root_id:
          type: integer
          gedmo:
            - treeRoot
        level:
          type: integer
          gedmo:
            - treeLevel
        created_at:
          type: date
          nullable: TRUE
          gedmo:
            timestampable:
              on: create
        updated_at:
          type: datetime
          nullable: TRUE
          gedmo:
            timestampable:
              on: update
        slug:
          type: string
          length: 255
          unique: TRUE
          gedmo:
            slug:
              separator: -
              fields:
                - name
    manyToOne:
      User:
        targetEntity: VM\UserBundle\Entity\User
        inversedBy: Video
        joinColumns:
          user_id:
            referencedColumnName: id
      parent:
        targetEntity: VM\VideoBundle\Entity\Video
        inversedBy: children
        gedmo:
          - treeParent
        joinColumns:
          parent_id:
            referencedColumnName: id
    oneToMany:
         children:
            targetEntity: VM\VideoBundle\Entity\Video
            mappedBy: parent
    lifecycleCallbacks: {  }